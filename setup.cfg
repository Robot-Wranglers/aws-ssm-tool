# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = ssm
description = AWS SSM tool
author = robot-wranglers
author_email = admin@example.com
license = MIT
license_files = LICENSE.txt
long_description = See the project README
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/robot-wranglers/ssm/
# Add here related links, for example:
project_urls =
    Documentation = https://github.com/robot-wranglers/ssm/
    Source = https://github.com/robot-wranglers/ssm/
    Download = https://github.com/robot-wranglers/ssm/#files

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
zip_ok = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >3.6

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
#
install_requires =
    boto3
    click
    pyyaml
    termcolor
    coloredlogs
    
[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# installed via `pip install .[typing]`
typing =
  mypy==1.2.0

# installed via `pip install .[dev]`
dev =
  IPython

# installed via `pip install .[docs]`
docs =
  pynchon==2022.10.31.17.31

# installed via `pip install .[testing]`
testing =
  IPython
  tox
  pytest
  pytest-cov
  mock
  flake8==5.0.4

# NB: This section is used by CI, via `make static-analysis`.  See also `Makefile`
# Installed via `pip install .[lint]`.
lint =
  tox

# NB: This section is used by CI, via `make publish`.  See also `Makefile`
# installed via `pip install .[publish]`
publish =
  twine
  awscli

[options.package_data]
* = *.json

[options.entry_points]
console_scripts =

[tool:pytest]
addopts =
  --cov secrets --cov-report term-missing
  --verbose
norecursedirs =
  dist
  build
  .tox
testpaths = tests
