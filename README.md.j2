<table width=100%>
  <tr>
    <td colspan=2><strong>
    {{python.package.name}}
      </strong>&nbsp;&nbsp;&nbsp;&nbsp;
    </td>
  </tr>
  <tr>
    <td width=15%><img src={{github.raw_url}}/master/img/icon.png style="width:150px"></td>
    <td>
    SSM tool is a small helper for interacting with Amazon Simple Systems Manager, focusing on secrets storage/retrieval.
    </td>
  </tr>
</table>
<a href=https://pypi.python.org/pypi/{{python.package.name}}/><img src="https://img.shields.io/pypi/l/{{python.package.name}}.svg"></a>
<a href=https://pypi.python.org/pypi/{{python.package.name}}/><img src="https://badge.fury.io/py/{{python.package.name}}.svg"></a>
<a href="{{github.repo_url}}/actions/workflows/python-test.yml"><img src="{{github.repo_url}}/actions/workflows/python-test.yml/badge.svg"></a>
<a href="https://hub.docker.com/r/robotwranglers/aws-ssm-tool/tags"><img src="https://img.shields.io/badge/dockerhub--blue.svg?logo=Docker"></a>

---------------------------------------------------------------------------------

{{markdown_toc(__template__, level=2)}}

---------------------------------------------------------------------------------

## Overview

The [AWS SSM Parameter-Store](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html) is great, but can be awkward to work with via the `awscli` tool.  This project provides the `ssm` tool as an alternative interface with simple CRUD.  It also supports moving or copying trees of multiple parameters, and performing those operations across multiple AWS profiles.

See [setup.cfg](setup.cfg) to find the latest info about required versions of boto.  There are other dependencies, including the popular [click](#) library for CLI support and [rich](#) for pretty output.

See the [Usage section](#usage) for more details.

---------------------------------------------------------------------------------

## Installation

See [pypi]({{pypi.project_url}}) for available releases.

```
pip install {{python.package.name}}
```

---------------------------------------------------------------------------------

## Usage

After installation, you can invoke this tool as either `ssm` or `python -m ssm`.

Usage info follows:

Usage info follows:

{%- for entrypoint_metadata in python_cli.console_script_entrypoints %}
{% if entrypoint_metadata.bin_name == 'ssm' %}
```bash
{{entrypoint_metadata.help_output}}
```
{%endif%}
{%endfor%}

See [the integration tests]({{github.repo_url}}/tree/master/tests/integration/test.sh) for more examples.

---------------------------------------------------------------------------------

## Usage from Docker

If you want to build locally, see the [Dockerfile in this repo](Dockerfile) and use the [Makefile](Makefile):

```bash
$ make docker-build docker-test
```

If you don't want to build the container yourself, you can pull it like this:

```bash
$ docker pull robotwranglers/aws-ssm-tool
Using default tag: latest
latest: Pulling from robotwranglers/aws-ssm-tool
docker.io/robotwranglers/aws-ssm-tool:latest
```

See a typical invocation below.  The 1st volume is for authenticating with SSM.  The 2nd volume shares the working directory with the container so commands using files (like `ssm put --file ./path/to/file /path/to/key`) can still work.

```bash
$ docker run \
  -v ~/.aws:/root/.aws \
  -v `pwd`:/workspace \
  -w /workspace \
  docker.io/robotwranglers/aws-ssm-tool:latest \
    ssm ls /
```
